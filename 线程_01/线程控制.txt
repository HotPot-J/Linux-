 线程控制： 线程创建 线程终止 线程等待 线程分离
  2    前提：线程控制当中的接口都是库函数，使用线程控制的接口需要链接线程库 线程库的名称叫做pthread 链接时增加 -lpthread选项
  3    线程创建：
  4      函数原型： int pthread_create(pthread_t *thread,const pthread_attr_t* attr,void*(*start_routine)(void*),void* arg);
  5      thread：线程标识符，和线程ID并不是同一回事，pthread_t 是线程独有空间的首地址，通过这个标识符可对当前的线程进行操作，调用pthread_cre    ate作为参数返回给调用者
  6      attr_t:设置线程属性，pthread_attr是一个结构体，这个结构体完成对新创建线程属性的设置；如果说，创建现成的时候，该参数被设置为NULL表示
    使用默认属性
  7      start_routine：线程入口函数，接收一个函数地址，线程启动后要执行的函数
  8      arg:给线程入口函数传递的参数值
  9          不能传递临时变量，可以传递在堆上开辟的内存
 10          void* 传递任意的类型，包含自定义的数据结构，类实例化指针对象
 11          1.可以传递一个堆上开辟的内存到线程入口函数当中去使用
 12          需要在线程入口函数结束的时候，将堆上开辟的内存释放掉
 13      返回值：成功返回0 失败返回错误代码
