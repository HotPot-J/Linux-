线程的基本概念：（线程是操作系统调度的最小单位   进程是操作系统分配资源的最小单位）
  2  什么是线程？
  3     1.在一个程序里的一个执行线路就叫做线程。更加准确的定义是：线程是“一个进程内部的控制序列”
  4     2.一切进程至少都有一个执行线程
  5     3.线程在进程内部运行，本质是在进程地址空间内运行
  6     4.在Linux系统中，在CPU眼中，看到的PCB都要比传统的进程更加轻量化
  7     5.透过进程虚拟地址空间，可以看到进程的大部分资源，将进程资源合理分配给每个执行流，就形成了线程执行流
  8 
  9     **其实内核当中没有线程的概念，叫做轻量级进程，创建一个线程相当于在内核中创建一个PCB（task_struct）结构体，
 10     创建出来的PCB是指向进程的虚拟地址空间的。
 11     线程是C库中的概念，因为线程的接口都是C库提供的。
 12     在task_struct当中变量pid指的是线程id，对于进程号来说，是在tgid当中保存的
 13     tgid(thread group ID):线程组id
 14     pid(process ID):轻量级进程ID，线程ID
 15      如果当前的程序当中只有一个主线程()执行main的函数的线程)，tgid==pid
 16      如果当前程序当中有多个线程，主线程的PCB当中tgid==pid
 17                                  工作线程(新创建出来的执行流)PCB当中tgid!=pid(该tgid是标识当前线程属于
 18                                          那一个进程的) 而这些线程会有自己的pid，tgid是一样的
 19  线程的优点：
 20     1.创建一个新的线程的代价要比创建一个新的进程小得多
 21     2.与进程之间的切换相比，线程之间的切换需要操作系统做的工作要少很多
 22     3.线程占用的资源要比进程少很多
 23     4.能充分利用多处理器的可并行数量
 24     5.在等待慢速I/O操作结束的同时，程序可执行其他的计算任务
 25     6.计算密集型应用，为了能在多处理器系统上运行，将计算分解到多个线程中实现
 26     7.I/O密集型应用，为了提高性能，将I/O操作重叠。线程可以同时等待不同的I/O操作
 27 
 28  线程的缺点：
 29     1.健壮性/鲁棒性低
 30      多线程的程序当中有多个执行流，一旦一个执行流异常，会导致整个进程异常
