1.线程池：
	线程池 = 线程安全队列+一大堆的线程(消费线程)
	
	一种线程使用模式。线程过多会带来调度开销，进而影响缓存局部性和整体性能
	。而线程池维护着多个线程，等待着监督管理者分配可并发执行的任务。避免了
	在处理短时间任务时，创建与销毁线程的代价。

   优点：线程池不仅能够保证内核的充分利用，还能防止过分调度。
 
2.线程池当中的线程，都是同一种角色的线程。即每一个线程都执行同样的入口函数
	
	如何让相同入口函数的线程，处理不同的请求呢？
		1.switch case: 处理大量不同需求的时候，比较麻烦 代码量大
		2.向线程池抛入数据的时候，将出来该数据的函数一起抛入(函数地址)，线
		程池当中的线程只需要调用传入的函数去处理传入的数据即可；
		（线程安全队列当中的元素：数据+处理函数的地址）

3.线程池使用场景：
	1.需要大量线程来完成任务，并且完成任务的时间比较短。（比如web服务器
	完成网页请求这样的任务，使用线程池就非常合适。因为单个任务小，而且任务
	数量巨大。）

	2.对性能要求苛刻的应用，比如要求服务器迅速响应客户请求。

	3.接受突发性的大量请求，但不至于是服务器因此产生大量线程的应用。


 
