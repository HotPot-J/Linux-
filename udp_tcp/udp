传输层：
	传输层负责端对端的传输，传输层负责端口，不论是TCP协议还是UDP协议都是和端
	口打交道的；
	端口划分：uint16_t(0~2^16)
		知名端口:(0-1023)
		http:80  https:443 ssh服务：22  ftp服务：23

		非知名端口：
			mysql:3306  oracle:1521

	网络当中数据传输的五元组： 源IP 源端口 目的ip 目的端口 协议

UDP协议：
	无连接 不可靠 面向数据报

	面向数据报：
		应用层使用UDP协议的时候，不管是从UDP接收缓冲区当中拷贝数据，还是应用
		层将数据拷贝到UDP的发送缓冲区，都是一整条数据拷贝的；而不是存在两条数
		据并存在缓冲区当中的。

		为什么不存在粘包问题？
			udp协议头部：
				struct udphdr
                {
					u_int16_t uh_sport; //源端口(2字节)
					u_int16_t uh_dport; //目的端口(2字节)
					u_int16_t uh_ulen; //udp数据报长度
					u_int16_t uh_sum; //检验和
				}
				数据报长度类型: uint16_t表示最大数值为65535，udp数据报最大65545个字节
				udp数据包长度（65535） =  udpheader(8字节) + 数据

				传输过程中，如果大于UDP传输最大长度，应该怎么办？
					1.自定制协议，在自定制协议当中拆分原属数据，达到UDP的最大数据报长度限制。


	 校验和：
		1.作用:检验UDP数据在传输过程当中是否有损坏；
			如果有损坏，则不会提交给应用层，直接丢弃。(不可靠)
			如果没有损坏，则应用层在调用recvfrom的时候，将数据提交给应用层

		2.如何通过校验和判断，数据是否有损坏
			2.1将UDP数据（UDP报头+数据）分为16个比特位：出了16个检验和的比
			特位不进行相加之外，针对其他的不同的16个比特位进行相加操作
			

		    2.2 对加起来的结果进行反码运算
			2.3 将反码运算的结果，放到校验和的16个比特位当中去

		 验证：
			接收到UDP数据报之后，将所有的16位比特位全部加起来
			1111 1111 1111 1111 则认为没有损坏


			eg：
			
			 UDP发送方：
			    0110 0110 0110 0000 --》源端口
				0101 0101 0101 0101 --》目的端口
				1000 1111 0000 1100 --》数据长度

		 相加： 10100 1010 1100 0001  （如果两个16位比特位进行相加，产生了
		 进位，从而加出来结果为17个比特位的时候，需要回卷。）
			回卷：
				1. 17比特位拆分为最高位+低16位
				2. 最高位+低16位

		 回卷： 1 + 0100 1010 1100 0001 = 0100 1010 1100 0010

		 取反： 1011 0101 0011 1101 ---》校验和


		     接收方：
			    0110 0110 0110 0000 --》源端口
				0101 0101 0101 0101 --》目的端口
				1000 1111 0000 1100 --》数据长度
				1011 0101 0011 1101 ---》校验和

		 相加:  11111 1111 1111 1110

		 回卷（超出16位）：1+11111 1111 1111 1110 = 1111 1111 1111 1111

		 结果为全1 没有被损坏

	UDP缓冲区：
		
		1.对于应用层的数据是整条数据接收和发送的
		
		2.对于发送而言，应用层使用sendto接口将数据提交给传输层当中的UDP的
		发送缓冲区，再发送缓冲去当中，打上UDP报头之后，就直接提交给网络层
		进行下一步的传输了。
		
		3.对于接收而言，应用层数用recvfrom接口将数据从接收缓冲区当中拷贝到
		应用层，UDP接收缓冲区是不保证数据的有序到达，也不保证可靠；当接收
		缓冲区中满的时候，从网卡当中接收的UDP数据包就直接丢弃了。

	UDP应用：
		DHCP：动态主机协议
			谁上网给谁分配IP；
			ipv4版本的ip地址不够用，uint32_t(42亿)
			DHCP协议是通过udp广播来获取ip地址的
				DHCP(目的ip地址是255.255.255.255)
				路由器接收到这样的请求之后，回复一个应答，分配一个IP给请求
				主机

	    DNS：域名解析协议
			将域名转换为ip地址的时候，使用的是udp协议

	
