1.捎带应答
	
目的：为了减少网络当中的数据量，当接收方接收到一个数据之后，发
	出确认的的时候，是随着接收方发送给发送方的数据一起发给发送方的

2.延时应答机制:
	同样也是为了减少网络当中的数据包的数据量的，防止网络拥塞。

	假如，接收数据方在接收到了数据后立刻返回ACK应答，那么此时返回给
	发送方窗口就可能比较小。 假设接收缓冲区为1M，一次收到500K，若立
	刻应答，返回给发送方的窗口就是500K，那么很有可能出现缓冲区迅速
	被消耗。

	如果采用延时应答机制，让接收缓冲区的数据被读走一部分则会避免这
	种情况。

	所有的包都可以延迟应答吗?
		答案是否定的。
		*数量限制:每隔N个包就应答一次
		*时间限制：超过最大延迟时间就应答一次
			N和超时时间不同的操作系统有不同的差异；一半取N = 2 
				超时时间 = 200ms

**窗口越大，网络吞吐量就越大，传输效率就越高，传输效率就越高。目的
是，在保证网络不拥塞的情况下尽量提高传输效率。

3.保活计时器：
	保证TCP连接是正常的；
	产生的背景：当前这个连接已经有一段时间没有产生数据了，则发送保
	活探测包，如果回复了ACK 说明连接正常。

	每隔75秒发送一个保活探测包，连续发送10次，如果10次都没有收到确
	认，则认为该链接异常，需要断开连接。

	保活计时器只要收到回复，就会重置，从0开始计时

4.面向字节流:
	字节流：数据和数据之间没有明显界限
	针对应用层程序：接收的时候可以接收任意大小的数据

	会出现粘包问题
	解决:（明确两个包之间的边界）应用层头部+应用层数据+间隔符








